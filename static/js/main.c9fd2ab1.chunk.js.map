{"version":3,"sources":["components/layout/Header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/pages/Contact.js","components/Filter.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Header","style","to","TodoItem","getStyle","borderBottom","props","todo","completed","this","id","title","type","onChange","markComplete","bind","onClick","delTodo","btnStyle","Component","border","borderRadius","cursor","float","Todos","todos","map","key","AddTodo","state","onSubmit","e","preventDefault","addTodo","setState","target","name","value","display","flex","placeholder","className","backgroundColor","Contact","email","message","handleSubmit","method","htmlFor","onNameChange","aria-describedby","onEmailChange","rows","comments","onMessageChange","event","React","Filter","divStyle","filAll","filActive","filComplete","marginLeft","App","allTodos","filter","axios","delete","then","res","post","data","uuid","v4","get","exact","path","render","Fragment","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.c9fd2ab1.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Header() {\n  return (\n    <header style={headerStyle}>\n      <h1>TodoList</h1>\n      <Link style={linkStyle} to=\"/\">Home</Link> | <Link style={linkStyle} to=\"/contact\">Contact</Link>\n    </header>\n  )\n}\n\nconst headerStyle = {\n  background: '#333',\n  color: '#fff',\n  textAlign: 'center',\n  padding: '10px'\n}\n\nconst linkStyle = {\n  color: '#fff',\n  textDecoration: 'none'\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class TodoItem extends Component {\n  getStyle = () => {\n    return {\n      background: '#f4f4f4',\n      padding: '10px',\n      borderBottom: '1px #ccc dotted',\n      textDecoration: this.props.todo.completed ? 'line-through' : 'none'\n    }\n  }\n\n  render() {\n    const { id, title } = this.props.todo;\n    return (\n      <div style={this.getStyle()}>\n        <p>\n          <input type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)} /> {' '}\n          { title }\n          <button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>x</button>\n        </p>\n      </div>\n    )\n  }\n}\n\n// PropTypes\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired,\n}\n\nconst btnStyle = {\n  background: '#ff0000',\n  color: '#fff',\n  border: 'none',\n  padding: '5px 9px',\n  borderRadius: '50%',\n  cursor: 'pointer',\n  float: 'right'\n}\n\nexport default TodoItem","\nimport React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nclass Todos extends Component {\n  render() {\n    return this.props.todos.map((todo) => (\n      <TodoItem key={todo.id} todo={todo} markComplete={this.props.markComplete} delTodo={this.props.delTodo} />\n    ));\n  }\n}\n\n// PropTypes\nTodos.propTypes = {\n  todos: PropTypes.array.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired,\n}\n\nexport default Todos;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class AddTodo extends Component {\n  state = {\n    title: ''\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.addTodo(this.state.title);\n    this.setState({ title: '' });\n  }\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit} style={{ display: 'flex' }}>\n        <input \n          type=\"text\" \n          name=\"title\" \n          style={{ flex: '10', padding: '5px' }}\n          placeholder=\"Add Todo ...\" \n          value={this.state.title}\n          onChange={this.onChange}\n        />\n        <input \n          type=\"submit\" \n          value=\"Submit\" \n          className=\"btn\"\n          style={{flex: '1', backgroundColor: 'Green'}}\n        />\n      </form>\n    )\n  }\n}\n\n// PropTypes\nAddTodo.propTypes = {\n  addTodo: PropTypes.func.isRequired\n}\n\nexport default AddTodo","import React from 'react';\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      message: ''\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Contact\">\n        <form id=\"contact-form\" onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n          <div className=\"form-group\">\n            <label htmlFor=\"first-name\">First Name</label>\n            <input type=\"text\" className=\"form-control\" value={this.state.name} onChange={this.onNameChange.bind(this)} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"last-name\">Last Name</label>\n            <input type=\"text\" className=\"form-control\" value={this.state.name} onChange={this.onNameChange.bind(this)} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputEmail1\">Email address</label>\n            <input type=\"email\" className=\"form-control\" aria-describedby=\"emailHelp\" value={this.state.email} onChange={this.onEmailChange.bind(this)} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"comments\">Comments</label>\n            <textarea className=\"form-control\" rows=\"5\" value={this.state.comments} onChange={this.onMessageChange.bind(this)} />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n  onNameChange(event) {\n    this.setState({ name: event.target.value })\n  }\n\n  onEmailChange(event) {\n    this.setState({ email: event.target.value })\n  }\n\n  onMessageChange(event) {\n    this.setState({ message: event.target.value })\n  }\n\n  handleSubmit(event) {\n  }\n}\n\nexport default Contact;\n","import React, { Component } from 'react'\nimport Proptypes from 'prop-types'\n\nclass Filter extends Component {\n    render() {\n        return (\n            <div style={divStyle}>\n            <span>Show: </span>\n            <button style={btnStyle} onClick={this.props.filAll}>\n              All\n            </button>\n            <button style={btnStyle} onClick={this.props.filActive}>\n              Active\n            </button>\n            <button style={btnStyle} onClick={this.props.filComplete}>\n              Completed\n            </button>\n          </div>\n        )\n    }\n}\n\nconst divStyle = {\n    textAlign: 'Center',\n    backgroundColor: '#d4d4d4',\n    padding: '10px 0px'\n}\n\nconst btnStyle = {\n  marginLeft: '10px',\n  padding: '0 4px',\n}\n\nFilter.propTypes = {\n  filAll: Proptypes.func.isRequired,\n  filActive: Proptypes.func.isRequired,\n  filComplete: Proptypes.func.isRequired,\n}\n\nexport default Filter","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo.js';\nimport Contact from './components/pages/Contact';\nimport uuid from 'uuid';\nimport axios from 'axios';\n\nimport './App.css';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    allTodos: [],\n    todos: []\n  };\n\n  filAll = () => {\n    this.setState({\n      todos: [...this.state.allTodos]\n    });\n  }\n\n  filActive = () => {\n    this.setState({\n      todos: this.state.allTodos.filter(todo => !todo.completed)\n    });\n  }\n\n  filComplete = () => {\n    this.setState({\n      todos: this.state.allTodos.filter(todo => todo.completed)\n    });\n  }\n  componentDidMount() {\n    axios\n      .get('https://jsonplaceholder.typicode.com/todos?_limit=3')\n      .then(res => this.setState({ allTodos: res.data, todos: res.data }));\n  }\n\n  markComplete = id => {\n    this.setState({\n      allTodos: [...this.state.allTodos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })]\n    });\n  };\n\n  delTodo = id => {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`).then(res =>\n      this.setState({\n        todos: [...this.state.allTodos.filter(todo => todo.id !== id)]\n      })\n    );\n  };\n\n  addTodo = title => {\n    axios\n      .post('https://jsonplaceholder.typicode.com/todos', {\n        title,\n        completed: false\n      })\n      .then(res => {\n        res.data.id = uuid.v4();\n        const todos =  [...this.state.allTodos, res.data];\n        this.setState({ todos, allTodos: todos  });\n      });\n  };\n\n  render() {\n    const { todos } = this.state;\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <React.Fragment>\n                  <AddTodo addTodo={this.addTodo} />\n                  <Filter \n                  filAll={this.filAll}\n                  filActive={this.filActive}\n                  filComplete={this.filComplete}\n                  />\n                  <Todos\n                    todos={todos}\n                    markComplete={this.markComplete}\n                    delTodo={this.delTodo}\n                  />\n                </React.Fragment>\n              )}\n            />\n            <Route path=\"/contact\" component={Contact} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}